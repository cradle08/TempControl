/**
  ******************************************************************************
  * @file    loopBuff.h
  * @author  Firmware-Team
  * @version V1.0.0
  * @date    13-06-2016
  * @brief
  ******************************************************************************
**/

#ifndef  __LOOPBUFF__
#define  __LOOPBUFF__

/*
*********************************************************************************************************
*                                              INCLUDE FILES
*********************************************************************************************************
*/
#include  "stm32f3xx.h"
/*
*********************************************************************************************************
*                                               INT DEFINES
*********************************************************************************************************
*/
#define QUEUE_MAX_SIZE 1024


/*
*********************************************************************************************************
*                                        LOCAL GLOBAL VARIABLES
*********************************************************************************************************
*/
typedef struct queue
{
  s32 queueSize;
  s32 head, tail;
  u8 *buff;
} Queue;

/*
*********************************************************************************************************
*                                             MODULE END
*********************************************************************************************************
*/

/*
*********************************************************************************************************
*                                           FUNCTION PROTOTYPES
*********************************************************************************************************
*/

extern bool initQueue( Queue *q, void *pBuff, s32 size );
extern bool enQueue( Queue *q, s8 key );
extern s8 deQueue( Queue *q );
extern bool isQueueEmpty( Queue *q );
extern s32 queueEmptyN( Queue *q );
extern bool isQueueFull( Queue *q );
extern s32 queueFullN( Queue *q );




#endif /* End */

